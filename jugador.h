#ifndef JUGADOR_H_INCLUDED
#define JUGADOR_H_INCLUDED
#define COLUMNAS 5
#define FILAS 3
#define MAX_CARTONES 3

struct JugadorE;

typedef struct JugadorE * Jugador;

//----------CARGA----------

//PRE: NINGUNO
//POST: DEVUELVE UNA ESTRUCTURA JUGADOR CON DATOS CARGADOR POR TECLADO
Jugador cargarDatosDelJugadorPorTeclado();

//PRE: NINGUNO
//POST: DEVUELVE UNA ESTRUCTURA JUGADOR CON DATOS VACIOS
Jugador cargarDatosPC();

//----------DESTRUCTOR----------

//PRE: NINGUNO
//POST: LIBERA DE LA MEMORIA UNA ESTRUCTURA JUGADOR
Jugador destruirJugador(Jugador j);

//----------IMPRIMIR----------

//PRE: QUE EL JUGADOR ESTÉ CARGADO
//POST: IMPRIME LOS DATOS DEL JUGADOR
void mostrarJugador(Jugador j);

//----------MENU----------

//PRE: LOS DOS JUGADORES CARGADOS, Y UN ENTERO DE UNO A TRES
//POST: CARGA LOS CARTONES POR TECLADO O ALEATORIOS DEL JUGADOR, Y ALEATORIO LOS DE LA MAQUINA
void menu (Jugador j, Jugador pc, int cartones);

//----------GETS----------

//PRE: QUE EL JUGADOR ESTE CARGADO
//POST: DEVUELVE UN ENTERO CON EL DNI DEL JUGADOR
int getDni(Jugador j);

//PRE: QUE EL JUGADOR ESTE CARGADO
//POST: DEVUELVE UN FLOTANTE CON EL PUNTAJE DEL JUGADOR
float getPuntaje(Jugador j);

//PRE: QUE EL JUGADOR ESTE CARGADO
//POST: DEVUELVE UNA CADENA CON EL NOMBRE DEL JUGADOR
char* getNombre(Jugador j);

//PRE: QUE EL JUGADOR ESTE CARGADO
//POST: DEVUELVE UNA CADENA CON EL APELLIDO DEL JUGADOR
char* getApellido(Jugador j);

//PRE: QUE EL JUGADOR ESTE CARGADO
//POST: DEVUELVE LA ESTRUCTURA CARTON DEL JUGADOR
Jugador getCarton (Jugador j);

//---------SETS---------

//PRE: QUE EL JUGADOR ESTE CARGADO, Y UN NUEVO ENTERO PARA EL DOCUMENTO DEL JUGADOR
//POST: MODIFICA EL DNI DEL JUGADOR CON EL ENVIADO POR PARAMETRO
void setDni (Jugador j, int doc);

//PRE: QUE EL JUGADOR ESTE CARGADO Y UN FLOTANTE PARA EL PUNTAJE DEL JUGADOR
//POST: MODIFICA EL PUNTAJE DEL JUGADOR CON EL FLOTANTE ENVIADO POR PARAMETRO
void setPuntaje(Jugador j, float punt);

//PRE: QUE EL JUGADOR ESTE CARGADO Y UNA CADENA PARA EL NOMBRE DEL JUGADOR
//POST: MODIFICA EL NOMBRE DEL JUGADOR CON LA CADENA ENVIADA POR PARAMETRO
void setNombre(Jugador j, char nom[40]);

//PRE: QUE EL JUGADOR ESTE CARGADO Y UNA CADENA PARA EL APELLIDO DEL JUGADOR
//POST: MODIFICA EL APELLIDO DEL JUGADOR CON AL CADENA ENVIADA POR PARAMETRO
void setApellido (Jugador j, char apell[40]);

//---------ARCHIVOS---------

//PRE: NINGUNO
//POST: IMPRIME LOS DATOS DE UN ARCHIVO
void imprimirArchivo();

//PRE: QUE SE HAYA JUGADO EL BINGO
//POST: GUARDA EL RESULTADO DE LOS PUNTAJES DEL JUEGO
void guardarArchivo (Jugador j);


#endif // JUGADOR_H_INCLUDED
